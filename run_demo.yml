---
- hosts: network
  become: yes
  pre_tasks:
    # To prevent unexpected problems, define the minimum Cumulus Linux
    # Release supported by this demo.
    - name: Verify Minimum Software Version
      assert:
        that: "{{ansible_lsb.release is version_compare('3.5', '>=') }}"
        msg: "Cumulus Linux version must be 3.5 or later. Version {{ansible_lsb.release}} detected"

  tasks:
    # return code 0 means it's running
    # return code 1 means it's not in the output of grep
    # other return code is unknown
    - name: Check if NTP is already in the vrf
      shell: "vrf task list | grep ntpd"
      register: ntp_vrf
      failed_when: ntp_vrf.rc >= 2

    - name: Configure NTP in management VRF
      command: "{{item}}"
      with_items:
        - systemctl stop ntp.service
        - systemctl disable ntp.service
        - systemctl start ntp@mgmt
      when: ntp_vrf.rc != 0

    - name: Enable FRR Zebra
      lineinfile:
        dest: /etc/frr/daemons
        line: "zebra=yes"
        regexp: "zebra="
      notify: restart frr service

    - name: Enable FRR BGP
      lineinfile:
        dest: /etc/frr/daemons
        line: "bgpd=yes"
        regexp: "bgpd="
      notify: restart frr service

    - name: Copy Interfaces File
      copy:
        src: configurations/{{ansible_hostname}}/interfaces
        dest: /etc/network/interfaces
        validate: ifup -a -s -i %s
      notify: apply interface changes

    - name: Copy Routing Configuration
      copy:
        src: configurations/{{ansible_hostname}}/frr.conf
        dest: /etc/frr/frr.conf
        validate: vtysh -C -f %s
      notify: apply frr config

  handlers:
    - name: restart frr service
      service:
        name: frr
        state: restarted

    - name: apply interface changes
      service:
        name: networking
        state: reloaded

    - name: apply frr config
      service:
        name: frr
        state: reloaded

- hosts: servers
  become: yes
  tasks:
    - name: Copy Interface Config
      copy:
        src: configurations/{{ansible_hostname}}/interfaces
        dest: /etc/network/interfaces
      register: reboot

    - name: Correct LLDP Settings
      lineinfile:
        dest: /etc/lldpd.d/port_info.conf
        line: "configure lldp portidsubtype ifname"
        create: yes
      notify: restart LLDP

    - name: Apply LLDP Settings
      meta: flush_handlers

    - name: Install ifupdown2
      apt:
        name: ifupdown2
        update_cache: yes
        state: present

    - name: Enable ifupdown2
      service:
        name: networking
        enabled: yes

    - name: Restart Rsyslog
      service:
        name: rsyslog
        state: restarted
      when: citc is undefined

    - name: Enable ifupdown2 after reboot
      lineinfile:
        dest: "/lib/systemd/system/networking.service"
        regexp: '^RemainAfterExit'
        insertafter: '^\[Service\]'
        line: 'RemainAfterExit=yes'

    - name: Enable network interfaces
      command: ifup {{item}}
      ignore_errors: yes
      with_items:
        - eth1
        - eth2
        - lo

    - name: Create FRR configuration directory
      file:
        path: /etc/frr
        state: directory
        mode: 0775

    - name: Copy FRR daemons File
      copy:
        src: configurations/{{ansible_hostname}}/daemons
        dest: /etc/frr/daemons

    - name: Copy FRR configuration File
      copy:
        src: configurations/{{ansible_hostname}}/frr.conf
        dest: /etc/frr/frr.conf

  handlers:
      - name: restart LLDP
        service:
          name: lldpd
          state: restarted      
